-- MySQL Script generated by David Jeiel
-- Thu May 24 20:35:27 2018
-- Model: Checklist    Version: 1.0

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema checklist
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema checklist
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `checklist` DEFAULT CHARACTER SET utf8 ;
USE `checklist` ;

-- -----------------------------------------------------
-- Table `checklist`.`usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checklist`.`usuarios` (
  `cpf` INT NOT NULL,
  `nomeUsuarios` VARCHAR(45) NULL,
  `dtNascimento` DATE NULL,
  `telefone` VARCHAR(45) NULL,
  `email` VARCHAR(45) NULL,
  PRIMARY KEY (`cpf`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `checklist`.`demandas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checklist`.`demandas` (
  `idDemanda` INT NOT NULL AUTO_INCREMENT COMMENT 'Código único que interliga a demanda à checklist e histórico\n',
  `nomeDemanda` VARCHAR(45) NULL,
  `nomeRemetente` VARCHAR(45) NULL,
  `docRemetente` INT NULL,
  `dtRecepcao` DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `solicitacao` VARCHAR(3000) NULL,
  PRIMARY KEY (`idDemanda`),
  INDEX `cpf_demandante_idx` (`docRemetente` ASC),
  CONSTRAINT `cpf_demandante`
    FOREIGN KEY (`docRemetente`)
    REFERENCES `checklist`.`usuarios` (`cpf`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `checklist`.`perguntas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checklist`.`perguntas` (
  `idPergunta` INT NOT NULL AUTO_INCREMENT,
  `pergunta` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`idPergunta`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `checklist`.`estado`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checklist`.`estado` (
  `idEstado` INT NOT NULL AUTO_INCREMENT,
  `nomeEstado` VARCHAR(200) NULL,
  PRIMARY KEY (`idEstado`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `checklist`.`checklist`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checklist`.`checklist` (
  `idResposta` INT NOT NULL AUTO_INCREMENT,
  `idDemanda` INT NULL,
  `idPergunta` INT NULL,
  `idStatus` INT NULL,
  `obs` VARCHAR(3000) NULL,
  PRIMARY KEY (`idResposta`),
  INDEX `demanda_checklist_idx` (`idDemanda` ASC),
  INDEX `pergunta_checklist_idx` (`idPergunta` ASC),
  INDEX `status_pergunta_idx` (`idStatus` ASC),
  CONSTRAINT `demanda_checklist`
    FOREIGN KEY (`idDemanda`)
    REFERENCES `checklist`.`demandas` (`idDemanda`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `pergunta_checklist`
    FOREIGN KEY (`idPergunta`)
    REFERENCES `checklist`.`perguntas` (`idPergunta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `status_pergunta`
    FOREIGN KEY (`idStatus`)
    REFERENCES `checklist`.`estado` (`idEstado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `checklist`.`parecer`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checklist`.`parecer` (
  `idParecer` INT NOT NULL AUTO_INCREMENT,
  `idDemanda` INT NOT NULL,
  `idStatus` INT NOT NULL,
  PRIMARY KEY (`idParecer`),
  INDEX `demanda_parecer_idx` (`idDemanda` ASC),
  INDEX `estado_parecer_idx` (`idStatus` ASC),
  CONSTRAINT `demanda_parecer`
    FOREIGN KEY (`idDemanda`)
    REFERENCES `checklist`.`demandas` (`idDemanda`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `estado_parecer`
    FOREIGN KEY (`idStatus`)
    REFERENCES `checklist`.`estado` (`idEstado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `checklist`.`historico`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `checklist`.`historico` (
  `idHistorico` INT NOT NULL AUTO_INCREMENT,
  `idResposta` INT NOT NULL,
  `dtParecer` DATETIME NOT NULL,
  `usuario` INT NOT NULL,
  PRIMARY KEY (`idHistorico`),
  INDEX `resposta_parecer_idx` (`idResposta` ASC),
  INDEX `usuario_parecer_idx` (`usuario` ASC),
  CONSTRAINT `resposta_parecer`
    FOREIGN KEY (`idResposta`)
    REFERENCES `checklist`.`parecer` (`idParecer`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `usuario_parecer`
    FOREIGN KEY (`usuario`)
    REFERENCES `checklist`.`usuarios` (`cpf`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
